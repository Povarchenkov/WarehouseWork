#Область ОписаниеПеременных

&НаКлиенте
Перем НомерУстройства, СоединениеИПараметры;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "СканШтрихкода"
		И (НомерУстройства = Источник ИЛИ Источник = ЭтаФорма)
		И ВводДоступен() Тогда
		
		ШтрихкодПоиск = Параметр;
		ОбработатьШтрихкод(Параметр); //процедура для обработки ШК
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если КомпонентыДляСчитыванияШтрихкодов <> Неопределено Тогда
		КомпонентыДляСчитыванияШтрихкодов.Подключить(НомерУстройства);
	КонецЕсли;
	
	НастройкиСоединения = ПолучитьНастройкиСоединения();
	СоединениеИПараметры = ОбменДаннымиКлиентСервер.ПолучитьСоединениеИПараметры(НастройкиСоединения);
	
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если КомпонентыДляСчитыванияШтрихкодов <> Неопределено Тогда
		КомпонентыДляСчитыванияШтрихкодов.Отключить(НомерУстройства);
	КонецЕсли;
	СоединениеИПараметры = Неопределено;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КэшированныеЗначения = Новый Структура;
	КэшированныеЗначения.Вставить("Штрихкоды", Новый Соответствие);
	КэшированныеЗначения.Вставить("ЯчейкиНоменклатуры", Новый Соответствие);
	КэшированныеЗначения.Вставить("ТекущийЭтап", "");
	КэшированныеЗначения.Вставить("ПоказатьДетали", Ложь);
	КэшированныеЗначения.Вставить("МожноЗакрыть", Ложь);
	
	Объект.Дата = ТекущаяДата();
	Объект.ВидОперации = Перечисления.ВидыОперацийОтбораРазмещенияТоваров.Размещение;
	Объект.Склад = Константы.ОсновнойСклад.Получить();
	
	Параметры.Свойство("ЯчейкаОтбора", ЯчейкаОтбора);
	Если ЗначениеЗаполнено(ЯчейкаОтбора) Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаТовары;
		ТекущийЭтап = "ВыборТовара";	
	Иначе 
		ЯчейкиОтбораМассив = Справочники.Ячейки.ПолучитьЯчейкиСортировки();
		КоличествоЯчеекОтбора = ЯчейкиОтбораМассив.Количество();
		Если КоличествоЯчеекОтбора = 0 Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Нет ячеек для отбора товара!";
			Сообщение.Сообщить();
		ИначеЕсли КоличествоЯчеекОтбора = 1 Тогда
			ЯчейкаОтбора = ЯчейкиОтбораМассив[0];
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаТовары;
			ТекущийЭтап = "ВыборТовара";
		Иначе
			ЯчейкиОтбора.ЗагрузитьЗначения(ЯчейкиОтбораМассив);
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодборЯчейкиОтбора;
			ТекущийЭтап = "ВыборЯчейкиОтбора";
		КонецЕсли;
	КонецЕсли;	
			
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Отказ = НЕ КэшированныеЗначения.МожноЗакрыть;		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ПараметрыЗаписи.Свойство("РежимЗаписи")
		И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		КэшированныеЗначения.МожноЗакрыть = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ТоварыОтбор.Очистить();
	Для Каждого ТекСтрока Из ТекущийОбъект.ТоварыРазмещение Цикл
		НоваяСтрока = ТекущийОбъект.ТоварыОтбор.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока,, "Ячейка");
		НоваяСтрока.Ячейка = ЯчейкаОтбора;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбработатьШтрихкод(Штрихкод)
	
	Если НЕ ЗначениеЗаполнено(Штрихкод) Тогда
		Возврат;	
	КонецЕсли;
	
	ДанныеШтрихкода = ПолучитьДанныеШтрихкодаСервер(Штрихкод, КэшированныеЗначения);
	
	ТипЗнчДанныеШтрихкода = ТипЗнч(ДанныеШтрихкода);
	
	Если ТекущийЭтап = "ВыборЯчейкиОтбора" Тогда
		Если ТипЗнчДанныеШтрихкода = Тип("СправочникСсылка.Ячейки") Тогда
			ЯчейкаОтбора = ДанныеШтрихкода;
		КонецЕсли;	
		Возврат;
	КонецЕсли;
	
	
	Если ТипЗнчДанныеШтрихкода = Тип("Структура") Тогда
	
		Номенклатура = ДанныеШтрихкода.Номенклатура;
		Упаковка = ДанныеШтрихкода.Упаковка;

		Если ПредыдущаяНоменклатура <> Номенклатура Тогда
		
			Количество = 0;
			Ячейка = ПредопределенноеЗначение("Справочник.Ячейки.ПустаяСсылка");
			
			ТекущийЭтап = "СканЯчейки";
		Иначе
			
			Если ЗначениеЗаполнено(Номенклатура) И ЗначениеЗаполнено(Ячейка) Тогда
			
				ИзменитьКоличество(1);
			
			КонецЕсли; 
		
		КонецЕсли;
			
		ЗаполнитьЯчейкиПоНоменклатуре(Штрихкод, Номенклатура);
		
	ИначеЕсли ТипЗнчДанныеШтрихкода = Тип("СправочникСсылка.Ячейки") Тогда
	
		Ячейка = ДанныеШтрихкода;
		
		Если ЗначениеЗаполнено(Номенклатура) Тогда
			ТекущийЭтап = "ВводКоличества";
			СинхронизироватьДанныеСТаблицей(Истина);
		КонецЕсли;		
	КонецЕсли;
	
	ПредыдущаяНоменклатура = Номенклатура;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	СинхронизироватьДанныеСТаблицей();
КонецПроцедуры

&НаКлиенте
Процедура ЯчейкаОтбораПриИзменении(Элемент)
	ЯчейкиОтбораВыбрана();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОстаткиПоЯчейкам

&НаКлиенте
Процедура ОстаткиПоЯчейкамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Ячейка = ОстаткиПоЯчейкам.НайтиПоИдентификатору(ВыбраннаяСтрока).Ячейка;
	ТекущийЭтап = "ВводКоличества";
	СинхронизироватьДанныеСТаблицей(Истина);
	УправлениеФормой();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЯчейкиОтбора

&НаКлиенте
Процедура ЯчейкиОтбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ЯчейкаОтбора = ЯчейкиОтбора.НайтиПоИдентификатору(ВыбраннаяСтрока).Значение;
	ЯчейкиОтбораВыбрана();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьДетали(Команда)
	КэшированныеЗначения.ПоказатьДетали = НЕ КэшированныеЗначения.ПоказатьДетали;
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура СброситьНоменклатуру(Команда)
	Номенклатура = Неопределено;
	ПредыдущаяНоменклатура = Неопределено;
	Ячейка = Неопределено;
	Количество = 0;
	ТекущийЭтап = "ВыборТовара";
	
	УправлениеФормой();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ШтрихкодПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("ОбработатьШтрихкодПриИзменении", 0.1, Истина);		
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкодПриИзменении()
	ОбработатьШтрихкод(ШтрихкодПоиск);	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьКоличество(Разница)
	Если Количество + Разница >= 0 Тогда		
		Количество = Количество + Разница;		
	КонецЕсли;	
	СинхронизироватьДанныеСТаблицей();		
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьДанныеСТаблицей(ИзТаблицы = Ложь)
	Если Не ЗначениеЗаполнено(Номенклатура) Или Не ЗначениеЗаполнено(Ячейка) Тогда
		Возврат;
	КонецЕсли; 
	
	НайденнаяСтрока = Неопределено;	
	Для каждого СтрокаТаблицы Из Объект.ТоварыРазмещение Цикл	
		Если СтрокаТаблицы.Номенклатура = Номенклатура
			И СтрокаТаблицы.Ячейка = Ячейка Тогда
		
			НайденнаяСтрока = СтрокаТаблицы;
			Прервать;		
		КонецЕсли;	
	КонецЦикла;
	
	Если НайденнаяСтрока = Неопределено Тогда		
		Если Не ИзТаблицы И Количество = 0 Тогда 
			Возврат;
		КонецЕсли;		
		НайденнаяСтрока = Объект.ТоварыРазмещение.Добавить();
		НайденнаяСтрока.Номенклатура = Номенклатура;
		НайденнаяСтрока.Упаковка = Упаковка;
		НайденнаяСтрока.Ячейка = Ячейка;		
	КонецЕсли;
	
	Если ИзТаблицы Тогда		
		Количество = НайденнаяСтрока.Количество;		
	Иначе		
		НайденнаяСтрока.Количество = Количество;
		Записать();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеШтрихкодаСервер(Штрихкод, КэшированныеЗначения)
	
	РегистрыСведений.Сканирования.ЗарегистрироватьВводШтрихкода(Штрихкод);
	
	ДанныеШтрихкода = КэшированныеЗначения.Штрихкоды.Получить(Штрихкод);
		
	Если ДанныеШтрихкода = Неопределено Тогда 
		ДанныеШтрихкода = Штрихкодирование.ПолучитьДанныеПоШтрихкоду(Штрихкод, КэшированныеЗначения);
	КонецЕсли;
	
	Возврат ДанныеШтрихкода;
КонецФункции

&НаСервере
Функция ПолучитьНастройкиСоединения()
	Возврат ОбменДаннымиСервер.ПолучитьНастройкиСоединения();	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьЯчейкиПоНоменклатуре(Знач Штрихкод, Знач Номенклатура)
	
	ЯчейкиНоменклатуры = КэшированныеЗначения.ЯчейкиНоменклатуры.Получить(Номенклатура);
	Если ЯчейкиНоменклатуры = Неопределено Тогда
		ЯчейкиНоменклатуры = ПолучитьДанныеПоШтрихкоду(Штрихкод);
		КэшированныеЗначения.ЯчейкиНоменклатуры.Вставить(Номенклатура, ЯчейкиНоменклатуры);
	КонецЕсли;
	Если ЯчейкиНоменклатуры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЯчейкаОтбораЗаполнена = ЗначениеЗаполнено(ЯчейкаОтбора);
	ЕстьТоварыВЯчейке = Ложь;
	
	ОстаткиПоЯчейкам.Очистить();
	Для Каждого ТекСтрока Из ЯчейкиНоменклатуры Цикл
		ЗаполнитьЗначенияСвойств(ОстаткиПоЯчейкам.Добавить(), ТекСтрока);
		
		Если ЯчейкаОтбораЗаполнена 
			И НЕ ЕстьТоварыВЯчейке
			И ЯчейкаОтбора = ТекСтрока.Ячейка Тогда
			
			ЕстьТоварыВЯчейке = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ЯчейкаОтбораЗаполнена
		И НЕ ЕстьТоварыВЯчейке Тогда
		
		СтрокаОшибка = "Товара нет в ячейке: " + ЯчейкаОтбора;
		Элементы.СтрокаОшибка.Видимость = Истина;
	Иначе	
		СтрокаОшибка = "";
		Элементы.СтрокаОшибка.Видимость = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьДанныеПоШтрихкоду(ШтрихкодаСтрока)
	
	АдресРесурсаСПараметрами = СоединениеИПараметры.Параметры.АдресРесурса + "/infoOnBarcode?barcode=" + СокрЛП(ШтрихкодаСтрока);
	
	СтруктураОтвета = ОбменДаннымиКлиентСервер.ПолучитьОтвет(СоединениеИПараметры, АдресРесурсаСПараметрами, "GET");
	Если СтруктураОтвета = Неопределено Тогда
		Возврат Неопределено;	
	КонецЕсли;
	
	Если СтруктураОтвета.error Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка в запросе: " + СтруктураОтвета.text;
		Сообщение.Сообщить();
	
		Возврат Неопределено;		
	КонецЕсли;
	
	Если СтруктураОтвета = Неопределено
		ИЛИ СтруктураОтвета.data = Неопределено
		ИЛИ НЕ СтруктураОтвета.Свойство("type") Тогда
		
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ОбработатьРезультат(СтруктураОтвета);	
КонецФункции

&НаСервере
Функция ОбработатьРезультат(СтруктураОтвета)
	МассивЯчеек = Новый Массив;
	
	Для Каждого ТекСтрока Из СтруктураОтвета.remnant Цикл
		СтруктураСтроки = Новый Структура("Ячейка, ВидЯчейки, Упаковка, ВНаличииОстаток");
		ЯчейкаСсылка = ОбменДаннымиСервер.ПолучитьСоздатьОбновитьСсылку(ТекСтрока.Ячейка, "Ячейки", Ложь);
		Если НЕ ЗначениеЗаполнено(ЯчейкаСсылка) Тогда
			Продолжить;
		КонецЕсли;
		СтруктураСтроки.Ячейка = ЯчейкаСсылка;
		СтруктураСтроки.Упаковка = ОбменДаннымиСервер.ПолучитьСоздатьОбновитьСсылку(ТекСтрока.Упаковка, "Упаковки", Ложь);
		СтруктураСтроки.ВидЯчейки = ТекСтрока.ВидЯчейки;
		СтруктураСтроки.ВНаличииОстаток = ТекСтрока.ВНаличииОстаток;
		
		МассивЯчеек.Добавить(СтруктураСтроки);
	КонецЦикла;
	Возврат МассивЯчеек;
КонецФункции

&НаКлиенте
Процедура УправлениеФормой()
	
	Элементы.ТоварыРазмещение.Видимость = КэшированныеЗначения.ПоказатьДетали;
		
	Если ТекущийЭтап = КэшированныеЗначения.ТекущийЭтап Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущийЭтап = "ВыборЯчейкиОтбора" Тогда
		СтрокаПодсказка = "Отсканируйте ячейку отбора";
	ИначеЕсли ТекущийЭтап = "ВыборТовара" Тогда
		СтрокаПодсказка = "Отсканируйте штрихкод товара";
		Элементы.ГруппаОдиночная.Видимость = Ложь;
		Элементы.ОстаткиПоЯчейкам.Видимость = Ложь;
		Элементы.СброситьНоменклатуру.Видимость = Ложь;
	ИначеЕсли ТекущийЭтап = "СканЯчейки" Тогда
		СтрокаПодсказка = "Отсканируйте штрихкод ячейки";
		Элементы.ГруппаОдиночная.Видимость = Истина;
		Элементы.Количество.Видимость = Ложь;
		Элементы.ОстаткиПоЯчейкам.Видимость = Истина;
		Элементы.СброситьНоменклатуру.Видимость = Ложь;	
	ИначеЕсли ТекущийЭтап = "ВводКоличества" Тогда
		СтрокаПодсказка = "Укажите количество товара";
		Элементы.ГруппаОдиночная.Видимость = Истина;
		Элементы.Количество.Видимость = Истина;
		Элементы.ОстаткиПоЯчейкам.Видимость = Ложь;
		Элементы.СброситьНоменклатуру.Видимость = Истина;
	Иначе 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Этап """ + ТекущийЭтап + """ не обрабатывается";
		Сообщение.Сообщить();	
	КонецЕсли;
	
	КэшированныеЗначения.ТекущийЭтап = ТекущийЭтап;
КонецПроцедуры

&НаКлиенте
Процедура ЯчейкиОтбораВыбрана()
	Если ЗначениеЗаполнено(ЯчейкаОтбора) Тогда
		ТекущийЭтап = "ВыборТовара";
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаТовары;
		УправлениеФормой();	
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
