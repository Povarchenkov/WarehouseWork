#Область ОписаниеПеременных

&НаКлиенте
Перем НомерУстройства, СоединениеИПараметры;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "СканШтрихкода" И НомерУстройства = Источник И ВводДоступен() Тогда
		ШтрихкодПоиск = Параметр;
		ОбработатьШтрихкод(Параметр); //процедура для обработки ШК
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)	
	Если КомпонентыДляСчитыванияШтрихкодов <> Неопределено Тогда
		КомпонентыДляСчитыванияШтрихкодов.Подключить(НомерУстройства);
	КонецЕсли;
	
	НастройкиСоединения = ПолучитьНастройкиСоединения();
	СоединениеИПараметры = ОбменДаннымиКлиентСервер.ПолучитьСоединениеИПараметры(НастройкиСоединения);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если КомпонентыДляСчитыванияШтрихкодов <> Неопределено Тогда
		КомпонентыДляСчитыванияШтрихкодов.Отключить(НомерУстройства);
	КонецЕсли;
	СоединениеИПараметры = Неопределено;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	ЯчейкиПриемки.ЗагрузитьЗначения(Справочники.Ячейки.ПолучитьЯчейкиПриемки());	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ШтрихкодПриИзменении(Элемент)
	ОбработатьШтрихкод(ШтрихкодПоиск);		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПолучитьДанныеПоШтрихкоду(ШтрихкодаСтрока)
	
	АдресРесурсаСПараметрами = СоединениеИПараметры.Параметры.АдресРесурса + "/infoOnBarcode?barcode=" + СокрЛП(ШтрихкодаСтрока);
	
	СтруктураОтвета = ОбменДаннымиКлиентСервер.ПолучитьОтвет(СоединениеИПараметры, АдресРесурсаСПараметрами, "GET");
	
	Если СтруктураОтвета = Неопределено Тогда
		Возврат Ложь;	
	КонецЕсли;
	
	Если СтруктураОтвета.error Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка в запросе: " + СтруктураОтвета.text;
		Сообщение.Сообщить();
	
		Возврат Неопределено;		
	КонецЕсли;
	
	Возврат СтруктураОтвета;	
КонецФункции

&НаКлиенте
Процедура ОбработатьШтрихкод(Штрихкод)
	
	ЗаписатьСканированиеШтрихкода(Штрихкод);
	
	Элементы.ГруппаСтраницы.Видимость = Истина;
	
	СтруктураОтвета = ПолучитьДанныеПоШтрихкоду(Штрихкод);
	Если СтруктураОтвета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтруктураОтвета.data = Неопределено Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаШтрихкодНеНайден;
		Возврат;
	КонецЕсли;
	
	Если НЕ СтруктураОтвета.Свойство("type") Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не указан тип штрихкода в ответе!";
		Сообщение.Сообщить();
	Иначе
		ЭтоЗапросПоНоменклатуре = СтруктураОтвета.type = "Номенклатура"; 
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы["Группа" + СтруктураОтвета.type];
		
		СтруктураОтвета = ОбработатьРезультат(СтруктураОтвета);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураОтвета.data); 
		
		ИнфоПоОстаткам.Очистить();
		Для Каждого ТекЗапись Из СтруктураОтвета.remnant Цикл
			НовСтрока = ИнфоПоОстаткам.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока, ТекЗапись);
			
			Если ЭтоЗапросПоНоменклатуре
				И ЯчейкиПриемки.НайтиПоЗначению(ТекЗапись.Ячейка) <> Неопределено
				И НЕ Элементы.СтрокаОшибка.Видимость Тогда
				
				Элементы.СтрокаОшибка.Видимость = Истина;
				СтрокаОшибка = "Есть товар еще не принятый на сортировку!"
			Иначе
				Элементы.СтрокаОшибка.Видимость = Ложь;	
			КонецЕсли;		
			
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьНастройкиСоединения()
	Возврат ОбменДаннымиСервер.ПолучитьНастройкиСоединения();	//ПользователиИнформационнойБазы.ТекущийПользователь()
КонецФункции

&НаСервере
Функция ОбработатьРезультат(СтруктураОтвета)
	
	СтруктураРезультат = Новый Структура("data, remnant", Новый Структура, Новый Массив);
	
	Если СтруктураОтвета.data.Свойство("Номенклатура") Тогда
		СтруктураРезультат.data.Вставить("Номенклатура", ОбменДаннымиСервер.ПолучитьСоздатьОбновитьСсылку(СтруктураОтвета.data.Номенклатура, "Номенклатура", Ложь));	
	КонецЕсли;
	Если СтруктураОтвета.data.Свойство("Упаковка") Тогда
		СтруктураРезультат.data.Вставить("Упаковка", ОбменДаннымиСервер.ПолучитьСоздатьОбновитьСсылку(СтруктураОтвета.data.Упаковка, "Упаковки", Ложь));	
	КонецЕсли;
	Если СтруктураОтвета.data.Свойство("Ячейка") Тогда
		СтруктураРезультат.data.Вставить("Ячейка", ОбменДаннымиСервер.ПолучитьСоздатьОбновитьСсылку(СтруктураОтвета.data.Ячейка, "Ячейки", Ложь));	
	КонецЕсли;
	
	Для Каждого ТекСтрока Из СтруктураОтвета.remnant Цикл
		СтруктураСтроки = Новый Структура("Номенклатура, Ячейка, Упаковка, ВНаличииОстаток");
		СтруктураСтроки.Номенклатура = ОбменДаннымиСервер.ПолучитьСоздатьОбновитьСсылку(ТекСтрока.Номенклатура, "Номенклатура", Ложь);
		СтруктураСтроки.Ячейка = ОбменДаннымиСервер.ПолучитьСоздатьОбновитьСсылку(ТекСтрока.Ячейка, "Ячейки", Ложь);
		СтруктураСтроки.Упаковка = ОбменДаннымиСервер.ПолучитьСоздатьОбновитьСсылку(ТекСтрока.Упаковка, "Упаковки", Ложь);
		СтруктураСтроки.ВНаличииОстаток = ТекСтрока.ВНаличииОстаток;
		
		Если ТекСтрока.Свойство("ВидЯчейки") Тогда  
			СтруктураСтроки.Вставить("ВидЯчейки", ТекСтрока.ВидЯчейки);
		КонецЕсли;
		
		СтруктураРезультат.remnant.Добавить(СтруктураСтроки);
	КонецЦикла;
	Возврат СтруктураРезультат;
КонецФункции

&НаСервере
Процедура ЗаписатьСканированиеШтрихкода(Штрихкод)
	РегистрыСведений.Сканирования.ЗарегистрироватьВводШтрихкода(Штрихкод);
КонецПроцедуры

#КонецОбласти



