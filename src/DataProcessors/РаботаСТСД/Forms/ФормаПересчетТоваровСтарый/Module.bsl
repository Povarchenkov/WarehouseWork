#Область ОписаниеПеременных

&НаКлиенте
Перем НомерУстройства, СоединениеИПараметры;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "СканШтрихкода"
		И (НомерУстройства = Источник ИЛИ Источник = ЭтаФорма)
		И ВводДоступен() Тогда
		
		ШтрихкодПоиск = Параметр;
		ОбработатьШтрихкод(Параметр); //процедура для обработки ШК
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если КомпонентыДляСчитыванияШтрихкодов <> Неопределено Тогда
		КомпонентыДляСчитыванияШтрихкодов.Подключить(НомерУстройства);
	КонецЕсли;
	
	НастройкиСоединения = ПолучитьНастройкиСоединения();
	СоединениеИПараметры = ОбменДаннымиКлиентСервер.ПолучитьСоединениеИПараметры(НастройкиСоединения);	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если КомпонентыДляСчитыванияШтрихкодов <> Неопределено Тогда
		КомпонентыДляСчитыванияШтрихкодов.Отключить(НомерУстройства);
	КонецЕсли;
	СоединениеИПараметры = Неопределено;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Пользователь", ТекущийПользователь);
	
	КэшированныеЗначения = Новый Структура;
	КэшированныеЗначения.Вставить("Штрихкоды", Новый Соответствие);
	КэшированныеЗначения.Вставить("МожноЗакрыть", Ложь);
	
	Параметры.Свойство("ТекущаяЯчейка", ТекущаяЯчейка);
	
	ЯчейкиТЗ = Объект.Товары.Выгрузить(, "Ячейка");
	ЯчейкиТЗ.Свернуть("Ячейка");
	
	ЯчейкиПересчета.ЗагрузитьЗначения(ЯчейкиТЗ.ВыгрузитьКолонку("Ячейка"));
	
	ОднаЯчейка =  ЯчейкиПересчета.Количество() = 1;
	
	Элементы.ЯчейкиПересчета.Видимость = НЕ ОднаЯчейка;
	Элементы.ТекущаяЯчейка.ТолькоПросмотр = ОднаЯчейка;	
	
	Объект.Исполнитель = ТекущийПользователь;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ДобавитьШтрихкодыДляНоменклатуры();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Отказ = НЕ КэшированныеЗначения.МожноЗакрыть;
	Записать();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ПараметрыЗаписи.Свойство("ВременнаяЗапись")
		И ПараметрыЗаписи.ВременнаяЗапись Тогда
		
		Возврат;
	КонецЕсли;
	
	Если НЕ КэшированныеЗначения.МожноЗакрыть Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПередЗаписьюЗавершение", ЭтаФорма);
		ПоказатьВопрос(ОписаниеОповещения, "Закончить пересчет?", РежимДиалогаВопрос.ДаНет, 20, КодВозвратаДиалога.Нет);
		Отказ = Истина;	
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.БлокироватьЯчейки = Ложь;
	ТекущийОбъект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыПересчетовТоваров.Выполнено");	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если ПараметрыЗаписи.Свойство("ВременнаяЗапись")
		И ПараметрыЗаписи.ВременнаяЗапись Тогда
		
		Возврат;
	КонецЕсли;
	
	АдресРесурсаСПараметрами = СоединениеИПараметры.Параметры.АдресРесурса + "/recalculation";
	
	СтруктураОтвета = ОбменДаннымиКлиентСервер.ПолучитьОтвет(СоединениеИПараметры, АдресРесурсаСПараметрами, "PUT", СтруктураДокумента(Объект.Ссылка));
	
	Если СтруктураОтвета <> Неопределено И СтруктураОтвета.error Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтруктураОтвета.text;
		Сообщение.Сообщить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбработатьШтрихкод(Штрихкод)	
	
	Если НЕ ЗначениеЗаполнено(Штрихкод) Тогда
		Возврат;	
	КонецЕсли;
	
	ДанныеШтрихкода = ПолучитьДанныеШтрихкодаСервер(Штрихкод, КэшированныеЗначения);
	
	Если ТипЗнч(ДанныеШтрихкода) <> Тип("Структура") Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не найдена номенклатура по штрихкоду " + Штрихкод;
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	
		
	СинхронизироватьДанныеСТаблицей(ДанныеШтрихкода.Номенклатура, ДанныеШтрихкода.Упаковка);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)	
	Если Поле.Имя = "ТоварыУпаковка"
		ИЛИ Поле.Имя = "ТоварыГоденДо"
		ИЛИ Поле.Имя = "ТоварыКоличествоУпаковок"
		ИЛИ Поле.Имя = "ТоварыКоличествоУпаковокФакт"
		ИЛИ Поле.Имя = "ТоварыНоменклатура" Тогда
	
		ДанныеСтроки = Объект.Товары.НайтиПоИдентификатору(ВыбраннаяСтрока);
		ОО = Новый ОписаниеОповещения("ВыборЗначенияЗавершение", ЭтаФорма, Новый Структура("ИмяПоля, ВыбраннаяСтрока", Поле.Имя, ВыбраннаяСтрока));
		Если Поле.Имя = "ТоварыГоденДо" Тогда
			ПоказатьВводДаты(ОО, ?(ЗначениеЗаполнено(ДанныеСтроки.ГоденДо), ДанныеСтроки.ГоденДо, НачалоМесяца(Объект.Дата)), "Годен до", ЧастиДаты.Дата); 	
		ИначеЕсли Поле.Имя = "ТоварыУпаковка" Тогда
			ПоказатьВыборИзСписка(ОО, ПолучитьСписокУпаковок(ДанныеСтроки.Номенклатура), Поле); 	
		ИначеЕсли Поле.Имя = "ТоварыНоменклатура" Тогда
			ОткрытьФорму("ОбщаяФорма.ФормаКартинки", Новый Структура("НоменклатураСсылка", ДанныеСтроки.Номенклатура), ЭтаФорма); 	
		Иначе 
			ПоказатьВводЧисла(ОО, ДанныеСтроки.КоличествоУпаковокФакт); 	
		КонецЕсли;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыборЗначенияЗавершение(Значение, ДопПараметры) Экспорт	
	Если Значение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ДанныеСтроки = Объект.Товары.НайтиПоИдентификатору(ДопПараметры.ВыбраннаяСтрока);		
	Если ДопПараметры.ИмяПоля = "ТоварыГоденДо" Тогда
		ДанныеСтроки.ГоденДо = Значение;	
	ИначеЕсли ДопПараметры.ИмяПоля = "ТоварыУпаковка" Тогда
		ДанныеСтроки.Упаковка = Значение.Значение;	
	Иначе
		ДанныеСтроки.КоличествоФакт = Значение;
		ДанныеСтроки.КоличествоУпаковокФакт = Значение;		
	КонецЕсли;
	//Записать(Новый Структура("ВременнаяЗапись", Истина));
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокУпаковок(Номенклатура)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Упаковки.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Упаковки КАК Упаковки
		|ГДЕ
		|	Упаковки.Владелец = &Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокУпаковок = Новый СписокЗначений();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокУпаковок.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
	Возврат СписокУпаковок;	
КонецФункции

&НаКлиенте
Процедура СинхронизироватьДанныеСТаблицей(Номенклатура, Упаковка)
	Если Не ЗначениеЗаполнено(Номенклатура) Или Не ЗначениеЗаполнено(ТекущаяЯчейка) Тогда
		Возврат;
	КонецЕсли; 
	
	НайденнаяСтрока = Неопределено;	
	Для каждого СтрокаТаблицы Из Объект.Товары Цикл	
		Если СтрокаТаблицы.Номенклатура = Номенклатура
			И СтрокаТаблицы.Ячейка = ТекущаяЯчейка
			И (СтрокаТаблицы.Упаковка = Упаковка ИЛИ Упаковка = ПредопределенноеЗначение("Справочник.Упаковки.ПустаяСсылка")) Тогда
		
			НайденнаяСтрока = СтрокаТаблицы;
			Прервать;		
		КонецЕсли;	
	КонецЦикла;
	
	Если НайденнаяСтрока = Неопределено Тогда		
		НайденнаяСтрока = Объект.Товары.Добавить();
		НайденнаяСтрока.Номенклатура = Номенклатура;
		НайденнаяСтрока.Упаковка = Упаковка;
		НайденнаяСтрока.Ячейка = ТекущаяЯчейка;
		
		ДобавитьШтрихкодыДляНоменклатуры(НайденнаяСтрока.ПолучитьИдентификатор());
	КонецЕсли;
	
	НайденнаяСтрока.КоличествоФакт = НайденнаяСтрока.КоличествоФакт + 1;
	НайденнаяСтрока.КоличествоУпаковокФакт = НайденнаяСтрока.КоличествоУпаковокФакт + 1;
	//Записать(Новый Структура("ВременнаяЗапись", Истина));
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("ОбработатьШтрихкодПриИзменении", 0.1, Истина);		
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкодПриИзменении()
	ОбработатьШтрихкод(ШтрихкодПоиск);	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеШтрихкодаСервер(Штрихкод, КэшированныеЗначения)
	
	РегистрыСведений.Сканирования.ЗарегистрироватьВводШтрихкода(Штрихкод);

	ДанныеШтрихкода = КэшированныеЗначения.Штрихкоды.Получить(Штрихкод);
	
	Если ДанныеШтрихкода = Неопределено Тогда 
		ДанныеШтрихкода = Штрихкодирование.ПолучитьДанныеПоШтрихкоду(Штрихкод, КэшированныеЗначения);
	КонецЕсли;
	
	Возврат ДанныеШтрихкода;
КонецФункции

&НаСервере
Функция ПолучитьНастройкиСоединения()
	Возврат ОбменДаннымиСервер.ПолучитьНастройкиСоединения();	
КонецФункции

&НаСервере
Функция СтруктураДокумента(Документ)
	Возврат ОбменДаннымиСервер.ЗаписатьJSONВСтроку(Документ);			
КонецФункции

&НаКлиенте
Процедура ВопросПередЗаписьюЗавершение(Ответ, ДопПарметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		КэшированныеЗначения.МожноЗакрыть = Истина;
		Записать();
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьШтрихкодыДляНоменклатуры(Знач ИдентификаторСтроки = Неопределено)
	
	РегистрыСведений.ШтрихкодыНоменклатуры.ДобавитьШтрихкодыВТаблицу(Объект.Товары, ИдентификаторСтроки);
	
КонецПроцедуры

#КонецОбласти
