#Область ОписаниеПеременных

&НаКлиенте
Перем НомерУстройства, СоединениеИПараметры;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "СканШтрихкода" И НомерУстройства = Источник И ВводДоступен() Тогда
		ШтрихкодПоиск = Параметр;
		ОбработатьШтрихкод(Параметр); //процедура для обработки ШК
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если КомпонентыДляСчитыванияШтрихкодов <> Неопределено Тогда
		КомпонентыДляСчитыванияШтрихкодов.Подключить(НомерУстройства);
	КонецЕсли;
	
	НастройкиСоединения = ПолучитьНастройкиСоединения();
	СоединениеИПараметры = ОбменДаннымиКлиентСервер.ПолучитьСоединениеИПараметры(НастройкиСоединения);
	
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если КомпонентыДляСчитыванияШтрихкодов <> Неопределено Тогда
		КомпонентыДляСчитыванияШтрихкодов.Отключить(НомерУстройства);
	КонецЕсли;
	СоединениеИПараметры = Неопределено;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	Если НЕ Параметры.Свойство("ДанныеЗаполнения") Тогда
		Отказ = Истина;
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не переданы данные заполнения!";
		Сообщение.Сообщить();
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ДанныеЗаполнения);
	
	ДополнитьДанныеЗапонения();
	
	КэшированныеЗначения = Новый Структура;
	КэшированныеЗначения.Вставить("Штрихкоды", Новый Соответствие);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	РеквизитыФормы = Новый Структура();
	РеквизитыФормы.Вставить("ИдентификаторЗадачи", ИдентификаторЗадачи);
	РеквизитыФормы.Вставить("Номенклатура", Номенклатура);
	РеквизитыФормы.Вставить("Упаковка", Упаковка);
	РеквизитыФормы.Вставить("Ячейка", Ячейка);
	РеквизитыФормы.Вставить("Количество", Количество);
	РеквизитыФормы.Вставить("КоличествоОбработано", КоличествоОбработано);
	
	ОповеститьОВыборе(РеквизитыФормы);
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПоказатьКартинку(Неопределено);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЯчейкаПриИзменении(Элемент)
	ПересчитатьКоличествоДляНовыхЗначений();
КонецПроцедуры

&НаКлиенте
Процедура УпаковкаПриИзменении(Элемент)
	ПересчитатьКоличествоДляНовыхЗначений();
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	//ПоказатьЗначение(, ШтрихкодыВсе);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьКартинку(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаКартинки", Новый Структура("НоменклатураСсылка", Номенклатура), ЭтаФорма); 	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОстатки(Команда)
	СтрокиШтрихкода = ШтрихкодыВсе.НайтиСтроки(Новый Структура("Номенклатура, Упаковка", Номенклатура, Упаковка));
	Если СтрокиШтрихкода.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Нет штрихкодов!";
		Сообщение.Сообщить();
	Иначе 
		ШтрихкодНоменклатуры = СтрокиШтрихкода[0].Штрихкод;
		ОткрытьФорму("Обработка.РаботаСТСД.Форма.ФормаОстатки", Новый Структура("ШтрихкодПоУмолчанию", ШтрихкодНоменклатуры), ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КорректировкаПозиции(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ВопросОКорректировкеЗавершение", ЭтаФорма);
	ПоказатьВопрос(ОписаниеОповещения, "Изменить ячейку или упаковку?", РежимДиалогаВопрос.ДаНет, 10, КодВозвратаДиалога.Нет, "Корректировка", КодВозвратаДиалога.Нет);
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьЗадачу(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте                              
Процедура ОбработатьШтрихкод(Штрихкод)
	
	ДанныеШтрихкода = ПолучитьДанныеШтрихкодаСервер(Штрихкод, КэшированныеЗначения);
	
	ТипЗнчДанныеШтрихкода = ТипЗнч(ДанныеШтрихкода);
	
	Если ТипЗнчДанныеШтрихкода = Тип("Структура") Тогда
	
		Если Номенклатура <> ДанныеШтрихкода.Номенклатура Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Номенклатура " + ДанныеШтрихкода.Номенклатура + " не соответствует необходимой!";
			Сообщение.Сообщить();			
			
		ИначеЕсли Упаковка = ДанныеШтрихкода.Упаковка
				ИЛИ ДанныеШтрихкода.Упаковка = ПредопределенноеЗначение("Справочник.Упаковки.ПустаяСсылка") Тогда
		
			КоличествоОбработано = КоличествоОбработано + 1;
			
		ИначеЕсли Упаковка <> ДанныеШтрихкода.Упаковка
			И МожноМенятьУпаковку Тогда
			
			Упаковка = ДанныеШтрихкода.Упаковка;
			ПересчитатьКоличествоДляНовыхЗначений();
			КоличествоОбработано = КоличествоОбработано + 1;
		
		Иначе
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Упаковка " + ДанныеШтрихкода.Упаковка + " не соответствует необходимой!";
			Сообщение.Сообщить();	
			
		КонецЕсли;		
			
	ИначеЕсли ТипЗнчДанныеШтрихкода = Тип("СправочникСсылка.Ячейки") Тогда
	
		Если МожноМенятьЯчейку Тогда
			Ячейка = ТипЗнчДанныеШтрихкода;
			ПересчитатьКоличествоДляНовыхЗначений();
			КоличествоОбработано = КоличествоОбработано + 1;
		Иначе 
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Нельзя менять ячейку!";
			Сообщение.Сообщить();	
		КонецЕсли;
		
	Иначе 
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Штрихкод не найден!";
		Сообщение.Сообщить();
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("ОбработатьШтрихкодПриИзменении", 0.1, Истина);		
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкодПриИзменении()
	ОбработатьШтрихкод(ШтрихкодПоиск);	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеШтрихкодаСервер(Штрихкод, КэшированныеЗначения)
	
	РегистрыСведений.Сканирования.ЗарегистрироватьВводШтрихкода(Штрихкод);

	ДанныеШтрихкода = КэшированныеЗначения.Штрихкоды.Получить(Штрихкод);
	
	Если ДанныеШтрихкода = Неопределено Тогда 
		ДанныеШтрихкода = Штрихкодирование.ПолучитьДанныеПоШтрихкоду(Штрихкод, КэшированныеЗначения);
	КонецЕсли;
	
	Возврат ДанныеШтрихкода;
КонецФункции

&НаСервере
Функция ПолучитьНастройкиСоединения()
	Возврат ОбменДаннымиСервер.ПолучитьНастройкиСоединения();	
КонецФункции

&НаКлиенте
Процедура УправлениеФормой()
	
	//Элементы.ТоварыРазмещение.Видимость = КэшированныеЗначения.ПоказатьДетали;
	//	
	//Если ТекущийЭтап = КэшированныеЗначения.ТекущийЭтап Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Если ТекущийЭтап = "ТоварыОтборНачало" Тогда
	//	СтрокаПодсказка = "Отсканируйте ячейку для отбора";
	//	Элементы.ГруппаОдиночная.Видимость = Ложь;
	//	Элементы.СброситьНоменклатуру.Видимость = Ложь;
	//ИначеЕсли ТекущийЭтап = "ТоварыОтборПодборТовара" Тогда
	//	СтрокаПодсказка = "Отсканируйте штрихкод товара";
	//	Элементы.ГруппаОдиночная.Видимость = Истина;
	//	Элементы.СброситьНоменклатуру.Видимость = Ложь;
	//	Элементы.ГруппаДеталиТоварыОтбор.ТекущаяСтраница = Элементы.ГруппаСтраницаТЧОтбор;
	//ИначеЕсли ТекущийЭтап = "ТоварыОтборНачалоВводКоличества" Тогда
	//	СтрокаПодсказка = "Укажите количество товара";
	//	Элементы.ГруппаОдиночная.Видимость = Истина;
	// 	Элементы.КоличествоРазмещено.Видимость = Истина;
	//	Элементы.СброситьНоменклатуру.Видимость = Истина;
	//	
	////ИначеЕсли ТекущийЭтап = "ОтобранныеТовары" Тогда
	////	СтрокаПодсказка = "Проверьте товары";
	////ИначеЕсли ТекущийЭтап = "ВыборТовара" Тогда
	////	СтрокаПодсказка = "Отсканируйте штрихкод товара";
	////	Элементы.ГруппаОдиночная.Видимость = Ложь;
	////	Элементы.СброситьНоменклатуру.Видимость = Ложь;
	////ИначеЕсли ТекущийЭтап = "СканЯчейки" Тогда
	////	СтрокаПодсказка = "Отсканируйте штрихкод ячейки";
	////	Элементы.ГруппаОдиночная.Видимость = Истина;
	////	Элементы.КоличествоРазмещено.Видимость = Ложь;
	////	Элементы.СброситьНоменклатуру.Видимость = Ложь;	
	////ИначеЕсли ТекущийЭтап = "ВводКоличества" Тогда
	////	СтрокаПодсказка = "Укажите количество товара";
	////	Элементы.ГруппаОдиночная.Видимость = Истина;
	//// 	Элементы.КоличествоРазмещено.Видимость = Истина;
	////	Элементы.СброситьНоменклатуру.Видимость = Истина;
	//Иначе 
	//	Сообщение = Новый СообщениеПользователю;
	//	Сообщение.Текст = "Этап """ + ТекущийЭтап + """ не обрабатывается";
	//	Сообщение.Сообщить();	
	//КонецЕсли;
	//
	//КэшированныеЗначения.ТекущийЭтап = ТекущийЭтап;
КонецПроцедуры

&НаСервере
Процедура ДополнитьДанныеЗапонения()	
	
	ТЗШтрихкоды = РегистрыСведений.ШтрихкодыНоменклатуры.ПолучитьШтрихкодыПоНоменклатуре(Новый Структура("Номенклатура, Упаковка", Номенклатура, Упаковка), Истина);
	ШтрихкодыПредставление = "";
	Для Каждого ТекСтрокаТЗ Из ТЗШтрихкоды Цикл
		НоваяСтрока = ШтрихкодыВсе.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаТЗ);
		ш4 = Прав(ТекСтрокаТЗ.Штрихкод, 4) + "; ";
		Если СтрНайти(ШтрихкодыПредставление, ш4) = 0 Тогда 
			ШтрихкодыПредставление = ШтрихкодыПредставление + ш4;
		КонецЕсли;
	КонецЦикла;
			
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗарегистрироватьРаботуСЯчейкой(Ячейка, Статус)
	РегистрыСведений.РаботаСЯчейками.ЗарегистрироватьРаботуСЯчейкой(Ячейка, Статус);		
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьКоличествоДляНовыхЗначений()
	Количество = Макс(Количество - КоличествоОбработано, 0);
	КоличествоОбработано = 0;
КонецПроцедуры

&НаКлиенте
Процедура ВопросОКорректировкеЗавершение(Ответ, ДопПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		МожноМенятьУпаковку = Истина;
		МожноМенятьЯчейку = Истина;
		
		Элементы.Ячейка.ТолькоПросмотр = НЕ МожноМенятьЯчейку;
		Элементы.Упаковка.ТолькоПросмотр = НЕ МожноМенятьУпаковку;	
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
